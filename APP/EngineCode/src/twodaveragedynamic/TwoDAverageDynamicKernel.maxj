/**
 * Document: MaxCompiler Tutorial (maxcompiler-tutorial.pdf)
 * Chapter: 8      Example: 5      Name: Two-dimensional average dynamic
 * MaxFile name: TwoDAverageDynamic
 * Summary:
 *       Kernel that averages within an 8-point window.
 */

package twodaveragedynamic;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.*;

class TwoDAverageDynamicKernel extends Kernel {

	TwoDAverageDynamicKernel(KernelParameters parameters, int nxMax) {
		super(parameters);
		
		DFEVar inStream = io.input("inStream", dfeInt(32));
		DFEVar res = inStream;
		DFEVar nx = io.scalarInput("nx", dfeInt(32));
        DFEVar cnt=control.count.simpleCounter(32, nxMax);
        
		DFEVar err = inStream;
		DFEVar ok = constant.var(dfeInt(32), 0);
		
		DFEVar window[] = new DFEVar[9];
		int i = 0;
		for (int x=-1; x<=1; x++)
			for (int y=-1; y<=1; y++) {
				int maxOffset = y * nxMax + x;
				window[i] =  
				((KernelMath.divMod(cnt.cast(dfeUInt(32))+1,nx.cast(dfeUInt(32))).getRemainder().cast(dfeInt(32)).eq(ok)&
				(x==1))?
				err:ok);
				
				window[i] = 
				window[i].eq(ok)&
				(KernelMath.divMod((cnt).cast(dfeUInt(32)),nx.cast(dfeUInt(32))).getRemainder().cast(dfeInt(32)).eq(ok)
				&(x==-1))?
				err:window[i];
				
				window[i] =  window[i].eq(ok)?
				stream.offset(inStream, y * nx + x, Math.min(0, maxOffset), Math.max(0, maxOffset)):
				err;
			
			    i++;
			}
//median
        DFEVar temp=err;
        int j;
        for(i=0; i<5; i++) {
            for(j=i+1; j<9; j++) {
                    DFEVar bool=window[j]<window[i];
                    temp=bool?window[i]:temp;
                    window[i] =bool?window[j]:window[i];
                    window[j] =bool?temp:window[j];
            }
        }
        res=window[4];
/*
//high(>)/low(<)
		for (DFEVar dfeVar : window) {
			res = (dfeVar>res)?dfeVar:res;
		}
	*/
        res = res<120?constant.var(dfeInt(32), 0):constant.var(dfeInt(32), 255);
		io.output("outStream", res, dfeInt(32));
		io.output("counter", cnt, dfeUInt(32));
	}
}
